---
name: 'Build and release Docker image'
description: 'Build Docker image from sources, and release it into GitHub package registry (ghcr.io)'

inputs:
  image_name:
    description: 'Name of the image to build and release (eg. ghcr.io/seravo/wordpress)'
    required: true
  tag:
    description: 'Tag of the image to build and release (eg. latest)'
    required: true
  path:
    description: 'Build path for Docker (default: .)'
    required: false
    default: '.'
  args:
    description: 'Additional arguments for Docker build. (eg. --build-arg NAME="NAME")'
    required: false
    default: ''
  dockerfile:
    description: 'Name of Dockerfile'
    required: true
    default: 'Dockerfile'
  cache:
    description: "Use cache"
    required: true
    default: "yes"
  default-cache:
    description: "Use cache from input image"
    required: true
    default: "yes"
  slack_webhook_url:
    description: 'Slack webhook URL to notify when build is done (optional)'
    required: false
    default: ''

runs:
  using: composite
  steps:
    - id: docker-login
      uses: Seravo/actions/docker-login@v1.15.0
      name: Login to GitHub Container Registry

    # To speed up builds, try to use previously built image as cache source.
    - if: ${{ github.event_name != 'schedule' && inputs.cache == 'yes' }}
      name: Pull previously built image
      id: docker-pull
      uses: Seravo/actions/docker-pull@v1.15.0
      with:
        image: ${{ inputs.image_name }}
      continue-on-error: true

    - name: Clean dashes from tag
      id: clean-tag
      shell: bash
      run: echo "tag=$(echo "${{ inputs.tag }}" |sed 's/\//-/g')" >> $GITHUB_OUTPUT

    - id: docker-build
      uses: Seravo/actions/docker-build@v1.15.0
      name: Build image
      with:
        image: "${{ inputs.image_name}}:${{ steps.clean-tag.outputs.tag }}"
        path: ${{ inputs.path }}
        args: ${{ inputs.args }}
        dockerfile: ${{ inputs.dockerfile }}
        cache: ${{ inputs.cache }}
        default-cache: ${{ inputs.default-cache }}

    - name: Push new ${{ inputs.image_name}} image to registry
      id: docker-push-master
      uses: Seravo/actions/docker-push@v1.15.0
      with:
        image: "${{ inputs.image_name }}:${{ steps.clean-tag.outputs.tag }}"

    - name: Notify about build completion (success)
      if: ${{ inputs.slack_webhook_url != '' && always() && steps.docker-push-master.outcome == 'success' }}
      uses: Seravo/slack-github-action@v1.21
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook_url }}
      with:
        payload: |
          {
            "message": ":white_check_mark: ${{ inputs.image_name }} build completed successfully!",
            "link": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }

    - name: Notify about build completion (failure)
      if: ${{ inputs.slack_webhook_url != '' && always() && steps.docker-push-master.outcome != 'success' }}
      uses: Seravo/slack-github-action@v1.21
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook_url }}
      with:
        payload: |
          {
            "message": ":x: ${{ inputs.image_name }} build failed!",
            "link": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
