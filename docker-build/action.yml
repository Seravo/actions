---
name: 'Build Docker image'
description: 'Build Docker image from sources'

inputs:
  image:
    description: 'Name and tag for the image to be built'
    required: true
  path:
    description: 'Build path for Docker (default: .)'
    required: true
    default: '.'
  dockerfile:
    description: 'Name of Dockerfile'
    required: true
    default: 'Dockerfile'
  cache:
    description: "Use cache"
    required: true
    default: "yes"
  args:
    description: 'Additional arguments for Docker build. (eg. --build-arg NAME="NAME")'
    required: true
    default: ''
  multiarch:
    description: 'Build multiarch images'
    required: false
    default: ''

outputs:
  image-id:
    description: 'Docker Image ID for the image'
    value: ''

runs:
  using: composite
  steps:
    - if: "${{ inputs.multiarch != '' }}"
      id: init-multiarch
      name: 'Initialize multiarch builder'
      run: |
        docker buildx create --use --name mybuild node-amd64 && \
        docker buildx create --append --name mybuild node-arm64
      shell: bash

    - id: docker-build
      name: 'Build new image'
      run: |
        docker buildx build \
          --label "org.opencontainers.image.revision=${{ github.sha }}" \
          -f "${{ inputs.path }}/${{ inputs.dockerfile }}" \
          ${{ inputs.args }} \
          ${{ inputs.cache == 'no' && '--no-cache' ||Â '' }} \
          --cache-from "${{ inputs.image }}" \
          --tag "${{ inputs.image }}" \
          "${{ inputs.path }}"
      shell: bash
